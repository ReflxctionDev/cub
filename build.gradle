import org.apache.tools.ant.filters.ReplaceTokens

buildscript {
    repositories {
        maven { url 'https://plugins.gradle.org/m2' }
    }
}

plugins {
    id 'com.github.johnrengelman.shadow' version '5.2.0'
}

apply plugin: 'java'
apply plugin: 'com.github.johnrengelman.shadow'

def projectVersion = "1.8.0"

subprojects {

    apply plugin: 'java'
    apply plugin: 'maven'
    apply plugin: 'com.github.johnrengelman.shadow'

    group = 'io.github.revxrsal'
    version = projectVersion

    sourceCompatibility = targetCompatibility = 1.8

    each { subproject -> evaluationDependsOn(subproject.path) }

    ext {
        moduleVersion = projectVersion
    }

    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
    }

    repositories {
        mavenLocal()
        mavenCentral()
        maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
        maven { url 'https://hub.spigotmc.org/nexus/content/groups/public/' }
        maven { url "https://repo.dmulloy2.net/nexus/repository/public/" }
        maven { url 'https://jitpack.io/' }
    }

    dependencies {
        compileOnly group: 'com.google.guava', name: 'guava', version: '29.0-jre'
        compileOnly 'org.jetbrains:annotations:19.0.0'
        compileOnly 'org.projectlombok:lombok:1.18.16'
        annotationProcessor 'org.projectlombok:lombok:1.18.16'
    }

    compileJava {
        options.compilerArgs += ["-parameters"]
    }

    compileTestJava {
        options.compilerArgs += ["-parameters"]
    }

    jar {
        from '../LICENSE'
    }

}

processResources {
    from(sourceSets.main.resources.srcDirs) {
        filter ReplaceTokens, tokens: [version: version]
    }
}
task assembleJar(type: Jar, dependsOn: subprojects.tasks['classes']) {
    archiveBaseName.set("cub-" + projectVersion)
    for (subproject in subprojects) {
        from subproject.configurations.archives.allArtifacts.files.collect {
            it = new File(it.parentFile, it.name.replace(".jar", "-all.jar"))
            zipTree(it) // include all sub-projects in the final JAR
        }
    }
}
tasks.assembleJar.dependsOn tasks.shadowJar


artifacts {
    archives(assembleJar)
}